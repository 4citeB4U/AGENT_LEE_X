/*
 LEEWAY HEADER
 TAG: ANDROID.GRADLE.APP.BUILD
 COLOR_ONION_HEX: NEON=#39FF14 FLUO=#0DFF94 PASTEL=#C7FFD8
 ICON_FAMILY: lucide
 ICON_GLYPH: package
 ICON_SIG: CD534113
 5WH: WHAT=Android app build configuration (Capacitor); WHY=Define SDK levels, deps, and packaging; WHO=Leeway Core; WHERE=android/app/build.gradle; WHEN=2025-10-19; HOW=Gradle
 SPDX-License-Identifier: MIT
*/

apply plugin: 'com.android.application'

android {
    namespace "com.yourcompany.agentlee"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.yourcompany.agentlee"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    flatDir{
        // If Cordova plugins are added (npx cap sync), re-add '../capacitor-cordova-android-plugins/src/main/libs'
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    // implementation project(':capacitor-cordova-android-plugins') // Uncomment after npx cap sync when Cordova plugins exist
}

// Only apply Capacitor supplemental build script if present (e.g., after `npx cap sync`)
if (file('capacitor.build.gradle').exists()) {
    apply from: 'capacitor.build.gradle'
} else {
    logger.lifecycle("[Gradle] Skipping capacitor.build.gradle (not found). If you add plugins, run: npx cap sync android")
}

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
